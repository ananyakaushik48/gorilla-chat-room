<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5rem;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col"></div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <a href="https://github.com">go to github</a>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>

                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>
                <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>
                <input type="hidden" name="action" id="action">
                <hr>
                <div class="chatbox" id="output">

                </div>
            </div>
            <div class="col-md-4">
                <h3>Who's online</h3>
                <ul id="online_users">

                </ul>
            </div>
        </div>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>
<script src="/static/reconnecting-websocket.min.js"></script>
<script>

    let socket = null;
    let o = document.getElementById("output")
    let userField = document.getElementById("username")
    let messageField = document.getElementById("message")
    window.beforeunload = () => {
        console.log("Leaving");
        let jsonData = {}
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData));
    }

    window.addEventListener('beforeunload', function (event) {
        console.log("Leaving");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData));
        // Uncomment the next line if you want to show a confirmation dialog
        // event.returnValue = 'Are you sure you want to leave?';
    });
    document.addEventListener("DOMContentLoaded", function () {
        socket = new ReconnectingWebSocket("ws://localhost:8080/ws", null, { debug: true, reconnectInterval: 3000 })

        socket.onopen = () => {
            console.log("Successful connextion ")
        }

        socket.onclose = () => {
            console.log("Connection closed")
        }

        socket.onerror = () => {
            console.log("there was an error")
        }

        socket.onmessage = msg => {
            let data = JSON.parse(msg.data)
            console.log("Message is", data.message);
            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users")
                    // emptying current list to repopulate with new list
                    while (ul.firstChild) ul.removeChild(ul.firstChild)

                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (item) {
                            let li = document.createElement("li")
                            li.appendChild(document.createTextNode(item))
                            ul.appendChild(li);
                        })
                    }
                    break;
                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>";
                    break
            }
        }


        userField.addEventListener("change", function () {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value
            socket.send(JSON.stringify(jsonData))
        })

        document.getElementById("message").addEventListener("keydown", function (event) {
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("not connected")
                }
                if (userField.value === "" || messageField.value === "") {
                    alert("Fill out user and message")
                    return false;
                } else {
                    sendMessage();
                }
                event.preventDefault();
                event.stopPropagation();
                sendMessage();
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function () {
            if (userField.value === "" && messageField.value === "") {
                alert("Fill out user and message")
                return false;
            } else {
                sendMessage();
            }
        })
    })
    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value
        socket.send(JSON.stringify(jsonData))
        messageField.value = ""
    }

</script>

</html>